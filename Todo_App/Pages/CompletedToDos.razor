@page "/completedtodos"

@inject ToDoService ToDoService
@inject NavigationManager NavigationManager

<PageTitle>Your To-Do List</PageTitle>

<h1 style="text-align: center;">Your To-Do List</h1>

<div>
    <InputText @bind-Value="searchToDos" placeholder="Search Todos" />
</div>

@if (tasks == null)
{
    <p>Awaiting todos</p>
}
else
{
    <table>
        <thead style="border: 1px solid black; background-color: grey;">
            <tr>
                <td>Taskname</td>
                <td>Task Due Date</td>
                <td>Task Completed</td>
            </tr>

        </thead>

        <tbody>

            @foreach (var task in tasks)
            {
                <tr @onclick='() => NavigationManager.NavigateTo($"/todoeditor/{task.Id}")'>
                    <td>@task.Name</td>
                    <td>@task.dateTime</td>
                    <td>@(task.IsCompleted == true ? "Yes" : "No")</td>
                </tr>
            }

        </tbody>
    </table>

}





@code {
    public List<ToDo> tasks { get; set; } = new List<ToDo>();

    public string searchToDos {get; set;}

    public async Task LoadToDos()
    {
        tasks = await ToDoService.GetcompletedToDos();
    }


    protected override async Task OnInitializedAsync()
    {
        await LoadToDos();
    }
}